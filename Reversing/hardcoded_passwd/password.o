
password:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <printf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <strcmp@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <strcmp@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__isoc99_scanf@plt>:
    1070:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 4020 <__isoc99_scanf@GLIBC_2.7>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d da 00 00 00 	lea    0xda(%rip),%rdi        # 1179 <main>
    109f:	ff 15 1b 2f 00 00    	call   *0x2f1b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 
    10b0:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4038 <__TMC_END__>
    10b7:	48 8d 05 7a 2f 00 00 	lea    0x2f7a(%rip),%rax        # 4038 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <_start+0x58>
    10c3:	48 8b 05 fe 2e 00 00 	mov    0x2efe(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <_start+0x58>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10e0:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 4038 <__TMC_END__>
    10e7:	48 8d 35 4a 2f 00 00 	lea    0x2f4a(%rip),%rsi        # 4038 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    $1,%rsi
    1102:	74 14                	je     1118 <_start+0x98>
    1104:	48 8b 05 cd 2e 00 00 	mov    0x2ecd(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <_start+0x98>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1120:	f3 0f 1e fa          	endbr64
    1124:	80 3d 0d 2f 00 00 00 	cmpb   $0x0,0x2f0d(%rip)        # 4038 <__TMC_END__>
    112b:	75 33                	jne    1160 <_start+0xe0>
    112d:	55                   	push   %rbp
    112e:	48 83 3d aa 2e 00 00 	cmpq   $0x0,0x2eaa(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0d                	je     1148 <_start+0xc8>
    113b:	48 8b 3d ee 2e 00 00 	mov    0x2eee(%rip),%rdi        # 4030 <__dso_handle>
    1142:	ff 15 98 2e 00 00    	call   *0x2e98(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1148:	e8 63 ff ff ff       	call   10b0 <_start+0x30>
    114d:	c6 05 e4 2e 00 00 01 	movb   $0x1,0x2ee4(%rip)        # 4038 <__TMC_END__>
    1154:	5d                   	pop    %rbp
    1155:	c3                   	ret
    1156:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    115d:	00 00 00 
    1160:	c3                   	ret
    1161:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1168:	00 00 00 00 
    116c:	0f 1f 40 00          	nopl   0x0(%rax)
    1170:	f3 0f 1e fa          	endbr64
    1174:	e9 67 ff ff ff       	jmp    10e0 <_start+0x60>

0000000000001179 <main>:
    1179:	55                   	push   %rbp
    117a:	48 89 e5             	mov    %rsp,%rbp
    117d:	48 83 ec 50          	sub    $0x50,%rsp
    1181:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1188:	00 00 
    118a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    118e:	31 c0                	xor    %eax,%eax
    1190:	48 b8 73 75 70 65 72 	movabs $0x6365737265707573,%rax
    1197:	73 65 63 
    119a:	48 89 45 b1          	mov    %rax,-0x4f(%rbp)
    119e:	48 b8 63 72 65 74 31 	movabs $0x33323174657263,%rax
    11a5:	32 33 00 
    11a8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    11ac:	48 8d 05 51 0e 00 00 	lea    0xe51(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    11b3:	48 89 c7             	mov    %rax,%rdi
    11b6:	b8 00 00 00 00       	mov    $0x0,%eax
    11bb:	e8 90 fe ff ff       	call   1050 <printf@plt>
    11c0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    11c4:	48 89 c6             	mov    %rax,%rsi
    11c7:	48 8d 05 4b 0e 00 00 	lea    0xe4b(%rip),%rax        # 2019 <_IO_stdin_used+0x19>
    11ce:	48 89 c7             	mov    %rax,%rdi
    11d1:	b8 00 00 00 00       	mov    $0x0,%eax
    11d6:	e8 95 fe ff ff       	call   1070 <__isoc99_scanf@plt>
    11db:	48 8d 55 b1          	lea    -0x4f(%rbp),%rdx
    11df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    11e3:	48 89 d6             	mov    %rdx,%rsi
    11e6:	48 89 c7             	mov    %rax,%rdi
    11e9:	e8 72 fe ff ff       	call   1060 <strcmp@plt>
    11ee:	85 c0                	test   %eax,%eax
    11f0:	75 11                	jne    1203 <main+0x8a>
    11f2:	48 8d 05 25 0e 00 00 	lea    0xe25(%rip),%rax        # 201e <_IO_stdin_used+0x1e>
    11f9:	48 89 c7             	mov    %rax,%rdi
    11fc:	e8 2f fe ff ff       	call   1030 <puts@plt>
    1201:	eb 0f                	jmp    1212 <main+0x99>
    1203:	48 8d 05 29 0e 00 00 	lea    0xe29(%rip),%rax        # 2033 <_IO_stdin_used+0x33>
    120a:	48 89 c7             	mov    %rax,%rdi
    120d:	e8 1e fe ff ff       	call   1030 <puts@plt>
    1212:	b8 00 00 00 00       	mov    $0x0,%eax
    1217:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    121b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1222:	00 00 
    1224:	74 05                	je     122b <main+0xb2>
    1226:	e8 15 fe ff ff       	call   1040 <__stack_chk_fail@plt>
    122b:	c9                   	leave
    122c:	c3                   	ret

Disassembly of section .fini:

0000000000001230 <_fini>:
    1230:	f3 0f 1e fa          	endbr64
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	48 83 c4 08          	add    $0x8,%rsp
    123c:	c3                   	ret
