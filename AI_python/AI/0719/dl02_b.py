# -*- coding: utf-8 -*-
"""DL02b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MJ-eC3KzTGfZawS8_7gtYu0524tJt9zh
"""
from tensorflow import keras
import tensorflow as tf
import numpy as np

model = keras.models.load_model('./AI/mnist_model')
model.summary()

#from tensorflow.keras.datasets import mnist
# mnist = tf.keras.datasets.mnist
# (train_images, train_labels), (test_images, test_labels) = mnist.load_data()
import matplotlib.pyplot as plt


alphabet = "0123456789"
dictionary = {}
for i in range(10):
	dictionary[i] = alphabet[i]


#from tensorflow.keras.preprocessing import image as image_utils
image_utils=tf.keras.preprocessing.image
def load_and_scale_image(image_path):
    image = image_utils.load_img(image_path, color_mode="grayscale", target_size=(28,28))
    return image

def predictImage(image_path):
    image = load_and_scale_image(image_path)
    image = image_utils.img_to_array(image)
    image = image.reshape(28,28)

    x=image.reshape(1,784)/255.0
    prediction = model.predict(x)   
    answer = dictionary[np.argmax(prediction)]
    print(answer)
    return answer

predictImage('./AI/src/01.png')

# image = load_and_scale_image('drive/MyDrive/00AI/05.jpg')
# plt.imshow(image,cmap='gray')
# image = image_utils.img_to_array(image)
# image = image.reshape(28,28)
# x=image.reshape(1,784)
# x=x/255.0
# prediction = model.predict(x)
# print(prediction)
# np.argmax(prediction)

# image = load_and_scale_image('drive/MyDrive/00AI/02.png')
# plt.imshow(image,cmap='gray')
# image = image_utils.img_to_array(image)
# image = image.reshape(28,28)
# x=image.reshape(1,784)
# x=x/255.0
# prediction = model.predict(x)
# print(prediction)
# np.argmax(prediction)

# import matplotlib.image as mpimg
# def show_image(image_path):
#   image = mpimg.imread(image_path)
#   #plt.imshow(image,cmap='gray')
#   plt.imshow(image)
